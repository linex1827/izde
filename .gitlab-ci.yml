stages:
  - build
  - deploy

build_image:
  stage: build
  image: docker:cli
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $DOCKER_USERNAME/izde20-api:$CI_COMMIT_SHORT_SHA .
    - docker tag $DOCKER_USERNAME/izde20-api:$CI_COMMIT_SHORT_SHA $DOCKER_USERNAME/izde20-api:latest
    - docker push $DOCKER_USERNAME/izde20-api:latest
  only:
    - maintest

docker-deploy:
  stage: deploy
  image: docker:cli
  services:
    - docker:dind
  script:
#    - docker pull $DOCKER_USERNAME/izde20-api:latest
    - |
      echo "SECRET_KEY=$SECRET_KEY" > .env
      echo "ALLOWED_HOSTS=$ALLOWED_HOSTS" >> .env
      echo "DEBUG=$DEBUG" > .env
      echo "PRODUCTION=$PRODUCTION" > .env
      echo "EMAIL_USE_TLS=$EMAIL_USE_TLS" > .env
      echo "EMAIL_HOST=$EMAIL_HOST" > .env
      echo "EMAIL_PORT=$EMAIL_PORT" > .env
      echo "EMAIL_HOST_USER=$EMAIL_HOST_USER" > .env
      echo "EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD" > .env
      echo "CELERY_BROKER_URL=$CELERY_BROKER_URL" > .env
      echo "CELERY_BEAT_SCHEDULER=$CELERY_BEAT_SCHEDULER" > .env
      echo "REDIS_URL=$REDIS_URL" > .env
      echo "CHANNEL_LAYER_REDIS_URL=$CHANNEL_LAYER_REDIS_URL" > .env
      echo "REDIS_HOST=REDIS_HOST" > .env
      echo "REDIS_PORT=REDIS_PORT" > .env
      echo "POSTGRES_DB=$POSTGRES_DB" > .env
      echo "POSTGRES_USER=$POSTGRES_USER" > .env
      echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" > .env
      echo "POSTGRES_HOST=$POSTGRES_HOST" > .env
      echo "POSTGRES_PORT=$POSTGRES_PORT" > .env
      echo "CSRF_TRUSTED_ORIGINS=$CSRF_TRUSTED_ORIGINS" > .env
      echo "CORS_ALLOW_ALL_ORIGINS=$CORS_ALLOW_ALL_ORIGINS" > .env
      echo "CORS_ALLOWED_ORIGINS=$CORS_ALLOWED_ORIGINS" > .env

    - docker-compose up -d --build
  only:
    - maintest